DROP TABLE IF EXISTS Purchases;
DROP TABLE IF EXISTS Visits;
DROP TABLE IF EXISTS Members;

-- Создание таблицы Members
CREATE TABLE Members
(
    id   INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50)
);

INSERT INTO Members (name)
VALUES ('John'),
       ('Sarah'),
       ('Michael'),
       ('Emily'),
       ('David'),
       ('Sophia'),
       ('Liam'),
       ('Olivia'),
       ('Daniel'),
       ('Ava'),
       ('Ethan'),
       ('Mia');

-- Создание таблицы Visits
CREATE TABLE Visits
(
    id         INT PRIMARY KEY,
    member_id  INT,
    visit_date DATE
);

INSERT INTO Visits (id, member_id, visit_date)
VALUES (101, 2, '2023-10-28'),
       (102, 4, '2022-01-12'),
       (103, 1, '2023-12-10'),
       (104, 5, '2022-10-19'),
       (105, 6, '2021-03-01'),
       (106, 9, '2023-05-07'),
       (107, 11, '2023-05-12'),
       (108, 3, '2023-06-18'),
       (109, 7, '2023-09-30'),
       (110, 12, '2023-08-15'),
       (111, 5, '2023-10-25'),
       (112, 5, '2022-02-11'),
       (113, 1, '2023-12-01'),
       (114, 6, '2022-09-09'),
       (115, 6, '2021-05-01'),
       (116, 6, '2023-03-07'),
       (117, 11, '2023-07-19'),
       (118, 12, '2022-04-18'),
       (119, 11, '2021-08-30'),
       (120, 6, '2023-08-05');

-- Создание таблицы Purchases
CREATE TABLE Purchases
(
    visit_id       INT,
    charged_amount INT
);

TRUNCATE Purchases;
INSERT INTO Purchases (visit_id, charged_amount)
VALUES (102, 2000),
       (103, 9000),
       (106, 7000),
       (108, 500),
       (105, 1500),
       (101, 200),
       (109, 3000),
       (119, 400),
       (110, 7000),
       (120, 5000),
       (116, 12000),
       (111, 7000),
       (115, 350),
       (118, 10500),
       (117, 100);
select distinct Members.id as id,Members.name as name,
case when 100*(count(visit_id))/count(member_id)>=80 then 'Diamond' 
when 100*(count(visit_id))/count(member_id) between 50 and 79 then 'Gold'
when 100*(count(visit_id))/count(member_id)<50 then 'Silver'
else 'Bronze'
end as status
from Members left join Visits on Members.id=Visits.member_id
             left join Purchases on Visits.id=Purchases.visit_id
group by id,name
